{
   "mdl": "Radiator",
   "mdlpn": "MIHO013",
   "parameters": [
      {
         "id": "Climate_Control",
         "component": "climate",
         "main": true,
         "config": {
            "curr_temp_t": "~TEMPERATURE/state",
            "max_temp": 40,
            "min_temp": 5,
            "modes": [
               "heat"
            ],
            "mode_cmd_t": "~VALVE_STATE/command",
            "mode_stat_t": "~VALVE_STATE/state",
            "mode_cmd_tpl": "{% if value == 'off' %} 1 {% else %} 2 {% endif %}",
            "mode_stat_tpl": "{% if value == '1' %} off {% else %} heat {% endif %}",
            "temp_cmd_t": "~TARGET_TEMP/command",
            "temp_stat_t": "~TARGET_TEMP/state",
            "ic": "mdi:radiator",
            "opt": "true",
            "temp_step": "0.5",
            "temp_unit": "C",
            "act_tpl": "{% if value == 'ON' %} heating {% else %} idle {% endif %}",
            "act_t": "~HVAC_ACTION/state",
            "pr_mode_cmd_t": "~Maintenance/command",
            "pr_mode_stat_t": "~Maintenance/state",
            "pr_modes": [
               "Cancel Command",
               "Request Diagnostics",
               "Request Voltage",
               "Exercise Valve",
               "Identify",
               "Low Power Mode ON",
               "Low Power Mode OFF",
               "Valve Auto",
               "Valve Open",
               "Valve Closed"
            ]
         }
      },
      {
         "id": "HEAT_DEMANDED",
         "component": "binary_sensor",
         "stat_t": "~HVAC_ACTION/state",
         "config": {
            "dev_cla": "running"
         }
      },
      {
         "id": "HEAT_DEMAND",
         "component": "sensor",
         "stat_t": "~HVAC_ACTION/state",
         "config": {
            "ent_cat": "diagnostic"
         }
      },
      {
         "id": "TEMPERATURE_DELTA",
         "component": "sensor",
         "stat_t": "~DELTA_TEMP/state",
         "config": {
            "ic": "mdi:compare-horizontal",
            "dev_cla": "temperature",
            "stat_cla": "MEASUREMENT",
            "unit_of_meas": "°C"
         }
      },
      {
         "id": "ROOM_TEMPERATURE",
         "component": "sensor",
         "stat_t": "~TEMPERATURE/state",
         "config": {
            "ic": "mdi:thermometer",
            "dev_cla": "temperature",
            "stat_cla": "MEASUREMENT",
            "unit_of_meas": "°C"
         }
      },
      {
         "id": "TEMPERATURE_SET_POINT",
         "component": "sensor",
         "stat_t": "~TARGET_TEMP/state",
         "config": {
            "ic": "mdi:target",
            "dev_cla": "temperature",
            "stat_cla": "MEASUREMENT",
            "unit_of_meas": "°C"
         }
      },
      {
         "id": "VOLTAGE",
         "component": "sensor",
         "stat_t": "~@/state",
         "config": {
            "ic": "mdi:battery",
            "dev_cla": "voltage",
            "stat_cla": "MEASUREMENT",
            "unit_of_meas": "V"
         }
      },
      {
         "id": "Battery_Updated",
         "component": "sensor",
         "stat_t": "~VOLTAGE_TS/state",
         "config": {
            "ic": "mdi:battery-clock",
            "val_tpl": "{{ as_datetime(value) }}",
            "dev_cla": "timestamp",
            "ent_cat": "diagnostic"
         }
      },
      {
         "id": "Diagnostics_Ran",
         "component": "sensor",
         "stat_t": "~DIAGNOSTICS_TS/state",
         "config": {
            "ic": "mdi:wrench-clock",
            "val_tpl": "{{ as_datetime(value) }}",
            "dev_cla": "timestamp",
            "ent_cat": "diagnostic"
         }
      },
      {
         "id": "Valve_Exercised",
         "component": "sensor",
         "stat_t": "~VALVE_TS/state",
         "config": {
            "ic": "mdi:timeline-clock",
            "val_tpl": "{{ as_datetime(value) }}",
            "dev_cla": "timestamp",
            "ent_cat": "diagnostic"
         }
      },
      {
         "id": "EXERCISE_VALVE",
         "component": "binary_sensor",
         "stat_t": "~@/state",
         "config": {
            "dev_cla": "moving",
            "pl_on": "success",
            "pl_off": "fail",
            "ent_cat": "diagnostic"
         }
      },
      {
         "id": "LOW_POWER_MODE",
         "component": "binary_sensor",
         "stat_t": "~@/state",
         "config": {}
      },
      {
         "id": "ERRORS",
         "component": "binary_sensor",
         "stat_t": "~@/state",
         "config": {
            "dev_cla": "problem",
            "ent_cat": "diagnostic"
         }
      },
      {
         "id": "ERROR_TEXT",
         "component": "sensor",
         "stat_t": "~@/state",
         "config": {
            "ent_cat": "diagnostic"
         }
      },
      {
         "id": "REPORT_PERIOD",
         "component": "number",
         "cmd_t": "~@/command",
         "config": {
            "ent_cat": "config",
            "unit_of_meas": "s",
            "min": 300,
            "max": 3600,
            "opt": true,
            "ic": "mdi:timelapse"
         }
      },
      {
         "id": "retries",
         "component": "sensor",
         "stat_t": "~@/state",
         "config": {
            "ic": "mdi:cached",
            "ent_cat": "diagnostic"
         }
      },
      {
         "id": "command",
         "component": "sensor",
         "stat_t": "~@/state",
         "config": {
            "ic": "mdi:traffic-light",
            "ent_cat": "diagnostic"
         }
      },
      {
         "id": "last_seen",
         "component": "sensor",
         "stat_t": "~@/state",
         "config": {
            "val_tpl": "{{ as_datetime(value) }}",
            "dev_cla": "timestamp"
         }
      },
      {
         "id": "battery",
         "component": "sensor",
         "stat_t": "~@/state",
         "config": {
            "dev_cla": "battery",
            "unit_of_meas": "%"
         }
      },
      {
         "id": "IDENTIFY",
         "component": "button",
         "cmd_t": "~Maintenance/command",
         "config": {
            "dev_cla": "identify",
            "pl_prs": "Identify"
         }
      }
   ]
}